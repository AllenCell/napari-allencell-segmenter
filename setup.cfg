[bumpversion]
current_version = 2.1.11
commit = True
tag = True
parse = (?P<major>\d+)\.(?P<minor>\d+)\.(?P<patch>\d+)(\-(?P<release>[a-z]+)(?P<build>\d+))?
serialize = 
	{major}.{minor}.{patch}-{release}{build}
	{major}.{minor}.{patch}

[bumpversion:file:setup.py]
search = {current_version}
replace = {new_version}

[bumpversion:file:napari_allencell_segmenter/__init__.py]
search = {current_version}
replace = {new_version}

[bumpversion:part:release]
optional_value = prod
first_value = dev
values = 
	dev
	prod

[bdist_wheel]
universal = 1

[flake8]
exclude = 
	docs/
	*/_tests/*
ignore = 
	E203
	W291
	W503
	W293
	E261
max-line-length = 120

[aliases]
test = pytest

[tool:pytest]
collect_ignore = ['setup.py']
filterwarnings = 
	ignore::UserWarning
	ignore::FutureWarning

[coverage:run]
omit = 
	*/_tests/*
	**/__init__.py

# napari needs the following metadata and options to find the plugin.
[metadata]
name = napari-napari_allencell_segmenter
classifiers =
    Framework :: napari

# package options
[options]
packages = find:
install_requires =
    napari

# tell napari where to find to the manifest
[options.entry_points]
napari.manifest =
    example-plugin = napari_allencell_segmenter:napari.yaml

# include manifest in package data
[options.package_data]
example-plugin = napari.yaml
